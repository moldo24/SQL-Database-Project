2)A
CREATE OR REPLACE PROCEDURE get_country_info
(p_country_id IN wf_countries.country_id%TYPE) IS
v_country_id wf_countries.country_id%TYPE;
v_capitol wf_countries.capitol%TYPE;
BEGIN
SELECT country_id, capitol INTO v_country_id, v_capitol
FROM wf_countries
WHERE country_id = p_country_id;
DBMS_OUTPUT.PUT_LINE(v_country_id || ' ' || v_capitol);
END get_country_info;
2.B
BEGIN
get_country_info(90);
END;
2.C
ORA-01403: no data found
2.D
CREATE OR REPLACE PROCEDURE get_country_info
(p_country_id IN wf_countries.country_id%TYPE) IS
v_country_id wf_countries.country_id%TYPE;
v_capitol wf_countries.capitol%TYPE;
BEGIN
SELECT country_id, capitol INTO v_country_id, v_capitol
FROM wf_countries
WHERE country_id = p_country_id;
DBMS_OUTPUT.PUT_LINE(v_country_id || ' ' || v_capitol);
EXCEPTION
 WHEN NO_DATA_FOUND THEN
 DBMS_OUTPUT.PUT_LINE('There is no country with that id');
END get_country_info;


BEGIN
get_country_info(95);
END;
4.A
CREATE OR REPLACE PROCEDURE get_no_countries 
(p_region_id IN wf_countries.region_id%TYPE, p_highest_elevation IN wf_countries.highest_elevation%TYPE) IS
v_count NUMBER(3);
BEGIN
SELECT count(country_id) INTO v_count
FROM wf_countries
WHERE region_id = p_region_id AND highest_elevation > p_highest_elevation;
DBMS_OUTPUT.PUT_LINE('The number of countries with elevation higher than ' || p_highest_elevation || ' for region ' || p_region_id || ' is ' || v_count);
END get_no_countries;
4.B
BEGIN
get_no_countries(5,2000);
END;
4.C
DESCRIBE get_no_countries;
4.D
CREATE OR REPLACE PROCEDURE get_no_countries 
(p_region_id IN wf_countries.region_id%TYPE, p_highest_elevation IN wf_countries.highest_elevation%TYPE,p_first_letter CHAR) IS
v_count NUMBER(3);
BEGIN
SELECT count(country_id) INTO v_count
FROM wf_countries
WHERE region_id = p_region_id AND highest_elevation > p_highest_elevation AND SUBSTR(country_name,1,1) = p_first_letter;
DBMS_OUTPUT.PUT_LINE('The number of countries with elevation higher than ' || p_highest_elevation || ' for region ' || p_region_id || ' is ' || v_count);
END get_no_countries;
4.E
DECLARE
v_region_id wf_countries.region_id%TYPE;
v_elevation wf_countries.highest_elevation%TYPE;
v_letter CHAR;
BEGIN
v_region_id := 5;
v_elevation := 2000;
v_letter := 'B';
get_no_countries(v_region_id, v_elevation, v_letter);
END;
4.F
DECLARE
v_region_id wf_countries.region_id%TYPE;
v_elevation wf_countries.highest_elevation%TYPE;
v_letter CHAR;
BEGIN
v_region_id := 5;
v_elevation := 2000;
v_letter := 'B';
get_no_countries(v_region_id, v_letter, v_elevation);
END;

ORA-06502: PL/SQL: numeric or value error: character to number conversion error

It couldn't implicitly convert B to a numeric value.